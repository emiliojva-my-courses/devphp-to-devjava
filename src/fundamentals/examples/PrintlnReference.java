package fundamentals.examples;

import java.io.PrintStream;
import java.util.function.Consumer;

/**
 * Explorando diferentes formas de criar refer√™ncias para System.out.println
 * Curiosidade: Como criar um "atalho" para println em Java?
 */
public class PrintlnReference {

    public static void main(String[] args) {

        // ===== M√âTODO 1: Refer√™ncia direta ao PrintStream =====
        PrintStream out = System.out;
        out.println("‚úÖ M√©todo 1: Usando PrintStream diretamente");
        out.println("Isso funciona perfeitamente!");

        System.out.println(); // Linha em branco

        // ===== M√âTODO 2: Method Reference (Java 8+) =====
        Consumer<String> println = System.out::println;
        println.accept("‚úÖ M√©todo 2: Usando Method Reference");
        println.accept("Mais funcional, estilo Java moderno!");

        System.out.println(); // Linha em branco

        // ===== M√âTODO 3: Vari√°vel est√°tica (mais elegante) =====
        demonstrarMetodoEstatico();

        System.out.println(); // Linha em branco

        // ===== COMPARA√á√ÉO DE SINTAXES =====
        System.out.println("üîç COMPARA√á√ÉO:");
        System.out.println("Normal:        System.out.println(\"texto\");");
        out.println("PrintStream:   out.println(\"texto\");");
        println.accept("Method Ref:    println.accept(\"texto\");");
        print("M√©todo static: print(\"texto\");");

        // ===== TESTE COM VARI√ÅVEIS =====
        String nome = "Emilio";
        int idade = 35;

        System.out.println(); // Linha em branco
        System.out.println("üß™ TESTE COM VARI√ÅVEIS:");

        // Forma tradicional
        System.out.println("Tradicional: " + nome + " tem " + idade + " anos");

        // Com PrintStream
        out.println("PrintStream: " + nome + " tem " + idade + " anos");

        // Com Method Reference
        println.accept("Method Ref: " + nome + " tem " + idade + " anos");

        // Com m√©todo est√°tico
        print("M√©todo static: " + nome + " tem " + idade + " anos");
    }

    // Vari√°vel est√°tica para uso global na classe
    private static final PrintStream out = System.out;

    // M√©todo wrapper mais elegante
    public static void print(String text) {
        System.out.println(text);
    }

    public static void demonstrarMetodoEstatico() {
        out.println("‚úÖ M√©todo 3: Usando vari√°vel est√°tica da classe");
        out.println("Acess√≠vel em qualquer m√©todo da classe!");
    }
}
